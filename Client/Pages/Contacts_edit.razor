@page "/contacts_edit/{contactId}"
@inject ReservationsService ReservationsService
@inject IJSRuntime JSRuntime
@inject IStringLocalizer<Resource> localizer
@inject NavigationManager NavigationManager
@using Reservation.Shared.Models


<section class="u-clearfix u-grey-5 u-section-1" id="sec-462a">
    <div class="u-clearfix u-sheet u-sheet-1">
        <div class="u-clearfix u-expanded-width u-layout-wrap u-layout-wrap-1">
            <div class="u-layout">
                <div class="u-layout-row">
                    <div class="u-container-style u-layout-cell u-size-20 u-layout-cell-1">
                        <div class="u-container-layout u-container-layout-1">
                            <h4 class="u-text u-text-default u-text-palette-2-base u-text-1">
                                @if (contactId == "0")
                                {@localizer["Create Contact"]}
                            else
                            { @localizer["Edit Contact"]}
                            </h4>
                        </div>
                    </div>
                    <div class="u-container-style u-layout-cell u-size-20 u-layout-cell-2">
                        <div class="u-container-layout u-container-layout-2">
                            <h6 class="u-text u-text-default u-text-palette-3-dark-2 u-text-2">
                                <span style="font-size: 0.875rem;"> Lorem ipsum dolor sit amet consectetur adipiscing elit praesent tempor sodales inceptos varius, nisl placerat dictum curae nascetur elementum aliquam rhoncus aliquet bibendum condimentum</span>
                            </h6>
                        </div>
                    </div>
                    <div class="u-container-style u-layout-cell u-size-20 u-layout-cell-3">
                        <div class="u-container-layout u-container-layout-3">
                            <a href="/contacts_index" class="u-active-palette-5-light-2 u-border-none u-btn u-button-style u-hover-palette-2-base u-palette-5-base u-btn-1">@localizer["Contacts"]</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="u-clearfix u-custom-color-2 u-section-2" id="sec-8458">
    <div class="u-clearfix u-sheet u-sheet-1">
        <div class="u-form u-form-1">
            @localizer[@Message]
        </div>
        <div class="u-form u-form-2">
            <EditForm Model="@contact" OnValidSubmit="SaveItem" class="u-clearfix u-form-spacing-10 u-form-vertical u-inner-form" name="form" style="padding: 10px;">
                <DataAnnotationsValidator />
                <div class="u-form-group u-form-name">
                    <label for="name-558c" class="u-form-control-hidden u-label">@localizer["Name"]</label>
                    <input type="text" @bind-value="contact.Name" placeholder="@localizer["Name"]" id="name-558c" name="name" class="u-border-1 u-border-grey-30 u-input u-input-rectangle" required="">
                    <ValidationMessage For="()=>contact.Name" />
                </div>
                <div class="u-form-date u-form-group u-form-group-8">
                    <label for="date-f055" class="u-label">@localizer["Birthdate"]</label>
                    <input type="date" placeholder="MM/DD/YYYY" id="date-f055" name="date" class="u-border-1 u-border-grey-30 u-input u-input-rectangle u-palette-3-light-3" @bind-value="contact.BirthDate">
                    <ValidationMessage For="()=>contact.BirthDate" />
                </div>
                <div class="u-form-group u-form-name">
                    <label for="name-558c" class="u-form-control-hidden u-label">@localizer["Phone Number"]</label>
                    <input type="text" @bind-value="contact.PhoneNumber" placeholder="@localizer["Phone Number"]" id="name-558c" name="name" class="u-border-1 u-border-grey-30 u-input u-input-rectangle" required="">
                    <ValidationMessage For="()=>contact.PhoneNumber" />
                </div>
                <div class="u-form-group u-form-select u-form-group-2">
                    <div class="u-form-select-wrapper">
                        <select id="select-e457" style="width:150px" name="select" class="u-border-1 u-border-grey-30 u-input u-input-rectangle" @bind="@contact.ContactTypeID">
                            <option value="null">@localizer["Select a contact type"]</option>
                            @foreach (var types in contactTypes)
                            {
                                <option value="@types.Id">@types.Name</option>
                            }
                        </select>
                        <ValidationMessage For="()=>contact.ContactTypeID" />
                    </div>
                </div>
                <ValidationSummary />
                <div class="u-align-right u-form-group u-form-submit">
                    <button type="submit" class="u-active-palette-2-light-3 u-border-none u-btn u-btn-submit u-button-style u-custom-color-3 u-hover-custom-color-4 u-btn-2">@localizer["Save"]</button>
                </div>
                <div class="u-form-send-message u-form-send-success"> Gracias! Tu mensaje ha sido enviado. </div>
                <div class="u-form-send-error u-form-send-message"> No se puede enviar su mensaje. Por favor, corrija los errores y vuelva a intentarlo. </div>
                <input type="hidden" value="" name="recaptchaResponse">
            </EditForm>
        </div>
    </div>
</section>

@code {
    #region PROPERTIES
    [Parameter] public string contactId { get; set; }
    private Contact contact = new() { BirthDate = DateTime.Now };
    private List<ContactType> contactTypes = new();
    private string Message = "";
    #endregion
    #region INITIALIZATION AND DISPOSAL
    //Reusing the same form for both create and edit item
    protected override async Task OnInitializedAsync()
    {
        //Loading Contact Types List
        contactTypes = (await ReservationsService.GetContactTypes()).contactTypes;
        //Requesting existing Item from API using the Id (Edit)
        try
        {
            if (contactId?.Length > 1)
            {
                var results = await ReservationsService.GetContactById(Guid.Parse(contactId));
                if (results.contact != null) contact = results.contact;
                else Message = results.Message;
            }
        }
        catch (Exception ex)
        {
            Message = ex.Message;
        }
    }
    #endregion
    #region ACTIONS
    private async Task SaveItem()
    {
        var results = await ReservationsService.SaveContact(contact, contactId?.Length < 2);
        if (results.issuccess) NavigationManager.NavigateTo("/contacts_index");
        else Message = results.Message;
    }
    #endregion

}
